// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLDD.Data;

#nullable disable

namespace QLDD.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20241016023403_tb1")]
    partial class tb1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QLDD.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hamlet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WardCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("QLDD.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BirthDateCoUser")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BirthDateFather")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BirthDateHubOrWf")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BirthDateMother")
                        .HasColumnType("datetime2");

                    b.Property<string>("Birthplace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Career")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitizenID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContentAfterGCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentBeforeGCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateIssueGCN")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstMidName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool?>("IsIssueGCNNew")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAndAddressOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFather")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameHubOrWf")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameMother")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberGCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberGCNIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PermanentAddressID")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceIssueGCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessInfoID")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessUserID")
                        .HasColumnType("int");

                    b.Property<string>("ReasonGCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivingAgency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SuggestedContent")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("THNVTC")
                        .HasColumnType("bit");

                    b.Property<int?>("TemporaryAddressID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlAttachedFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFile3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlGCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermanentAddressID");

                    b.HasIndex("ProcessInfoID")
                        .IsUnique()
                        .HasFilter("[ProcessInfoID] IS NOT NULL");

                    b.HasIndex("ProcessUserID");

                    b.HasIndex("TemporaryAddressID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("QLDD.Models.HistoryDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("TimeChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoryDocuments");
                });

            modelBuilder.Entity("QLDD.Models.HouseHold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HouseHolds");
                });

            modelBuilder.Entity("QLDD.Models.ProcessInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReceptionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TypeReceiceDate")
                        .HasColumnType("int");

                    b.Property<int?>("TypeReception")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProcessInfos");
                });

            modelBuilder.Entity("QLDD.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BirthYear")
                        .HasColumnType("int");

                    b.Property<string>("Birthplace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Career")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitizenID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstMidName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("HouseHoldID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAndAddressOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nation")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NationalityCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("NationalityNameQT")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NationalityNameTV")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PermanentAddressID")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("RoleInFamily")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TemporaryAddressID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HouseHoldID");

                    b.HasIndex("PermanentAddressID")
                        .IsUnique()
                        .HasFilter("[PermanentAddressID] IS NOT NULL");

                    b.HasIndex("TemporaryAddressID")
                        .IsUnique()
                        .HasFilter("[TemporaryAddressID] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QLDD.Models.Document", b =>
                {
                    b.HasOne("QLDD.Models.Address", "PermanentAddress")
                        .WithMany()
                        .HasForeignKey("PermanentAddressID");

                    b.HasOne("QLDD.Models.ProcessInfo", "ProcessInfo")
                        .WithOne()
                        .HasForeignKey("QLDD.Models.Document", "ProcessInfoID");

                    b.HasOne("QLDD.Models.User", "ProcessUser")
                        .WithMany()
                        .HasForeignKey("ProcessUserID");

                    b.HasOne("QLDD.Models.Address", "TemporaryAddress")
                        .WithMany()
                        .HasForeignKey("TemporaryAddressID");

                    b.Navigation("PermanentAddress");

                    b.Navigation("ProcessInfo");

                    b.Navigation("ProcessUser");

                    b.Navigation("TemporaryAddress");
                });

            modelBuilder.Entity("QLDD.Models.HistoryDocument", b =>
                {
                    b.HasOne("QLDD.Models.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("QLDD.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Document");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QLDD.Models.User", b =>
                {
                    b.HasOne("QLDD.Models.HouseHold", "HouseHold")
                        .WithMany("Users")
                        .HasForeignKey("HouseHoldID");

                    b.HasOne("QLDD.Models.Address", "PermanentAddress")
                        .WithOne()
                        .HasForeignKey("QLDD.Models.User", "PermanentAddressID");

                    b.HasOne("QLDD.Models.Address", "TemporaryAddress")
                        .WithOne()
                        .HasForeignKey("QLDD.Models.User", "TemporaryAddressID");

                    b.Navigation("HouseHold");

                    b.Navigation("PermanentAddress");

                    b.Navigation("TemporaryAddress");
                });

            modelBuilder.Entity("QLDD.Models.HouseHold", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
